// Station 6
const int NCB = 14;
const int NSEG = 19;
const int NTRAIN = 2;
const int NPOINT = 12;
const int NROUTELENGTH = 13;

//TYPES
typedef int[0, NTRAIN-1] t_id;
typedef int[0, NCB-1]  cB_id;
typedef int[0, NPOINT-1] p_id;
typedef int[0, NSEG-1] seg_id;
typedef int[-1, NSEG-1] segV_id;
typedef int[-1, NPOINT-1] pV_id;
typedef int[-1, NCB-1] cBV_id;
typedef int[-1, NTRAIN-1] tV_id;
typedef struct {
    cB_id cb;
    seg_id seg;
} reservation;

const int[1,NCB] lockLimit = 2;
const int[1,NSEG] resLimit = 2;

const cBV_id boxRoutes[NTRAIN][NROUTELENGTH+1] = {{0,1,2,3,4,5,6,7,8,9,10,11,12,13}, {13,12,11,10,9,8,7,6,5,4,3,2,1,-1}};
const segV_id segRoutes[NTRAIN][NROUTELENGTH]= {{0,1,3,4,6,7,9,10,12,13,15,16,18}, {18, 17, 15, 14, 12, 11, 9, 8, 6, 5, 3, 2,-1}};
const segV_id cBs[NCB][3]= {{0,-1,-1}, {0,1,2}, {3,1,2}, {3,4,5}, {6,4,5}, {6,7,8}, {9,7,8}, {9,10,11}, {12,10,11}, {12,13,14}, {15,13,14}, {15,16,17}, {18,16,17}, {18,-1,-1}};
const pV_id points[NCB] = { -1, 0, 1, 2, 3,4,5,6,7,8,9,10,11,-1};
const reservation initialRes[NTRAIN] = {{1,0}, {12, 18}};
bool pointInPlus[NPOINT] = {true, true, true, true, true, true, true, true, true, true, true, true};
