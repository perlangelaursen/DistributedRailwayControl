Established direct connection to local server.
(Academic) UPPAAL version 4.1.19 (rev. 5649), September 2014 -- server.
Disconnected.
Established direct connection to local server.
(Academic) UPPAAL version 4.1.19 (rev. 5649), September 2014 -- server.
A<> forall(i:t_id) not(Train(i).Initial)
Verification/kernel/elapsed time used: 0s / 0s / 0.003s.
Resident/virtual memory usage peaks: 9,228KB / 30,756KB.
Property is satisfied.
A<> forall(i:cB_id) not(CB(i).Initial)
Verification/kernel/elapsed time used: 0s / 0s / 0.003s.
Resident/virtual memory usage peaks: 9,244KB / 30,772KB.
Property is satisfied.
A[] !deadlock
Verification/kernel/elapsed time used: 0s / 0s / 0.003s.
Resident/virtual memory usage peaks: 9,264KB / 30,784KB.
Property is satisfied.
E<> forall(i:t_id) Train(i).Arrived
Verification/kernel/elapsed time used: 0s / 0s / 0.002s.
Resident/virtual memory usage peaks: 9,268KB / 30,788KB.
Property is not satisfied.
A[] forall(i:t_id) forall(j:t_id) Initializer.Initialized && i != j imply (Train(i).curSeg != Train(j).curSeg) && (Train(i).DoubleSegment imply Train(i).headSeg != Train(j).curSeg) && (Train(i).DoubleSegment && Train(j).DoubleSegment imply Train(i).headSeg!= Train(j).headSeg)
Verification/kernel/elapsed time used: 0.016s / 0s / 0.002s.
Resident/virtual memory usage peaks: 9,284KB / 30,816KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).DoubleSegment imply (Train(i).headSeg == CB(Train(i).boxes[Train(i).index+1]).segments[0] && Train(i).curSeg == CB(Train(i).boxes[Train(i).index+1]).connected) || (Train(i).curSeg == CB(Train(i).boxes[Train(i).index+1]).segments[0] && Train(i).headSeg == CB(Train(i).boxes[Train(i).index+1]).connected)
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,316KB / 30,884KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).DoubleSegment && points[Train(i).boxes[Train(i).index+1]] != -1 imply !Point(points[Train(i).boxes[Train(i).index+1]]).SwitchingPM && !Point(points[Train(i).boxes[Train(i).index+1]]).SwitchingMP
Verification/kernel/elapsed time used: 0.015s / 0s / 0.002s.
Resident/virtual memory usage peaks: 9,320KB / 30,888KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).locks == (sum(j:cB_id) (j > Train(i).index && j < Train(i).lockIndex && points[Train(i).boxes[j]] > -1))
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,328KB / 30,896KB.
Property is satisfied.
A[] forall(i:p_id) Initializer.Initialized && !Point(i).SwitchingPM && !Point(i).SwitchingMP imply (pointInPlus[i] imply Point(i).Plus) && (!pointInPlus[i] imply Point(i).Minus)
Verification/kernel/elapsed time used: 0s / 0s / 0s.
Resident/virtual memory usage peaks: 9,328KB / 30,896KB.
Property is satisfied.
A[] forall(i:cB_id) Initializer.Initialized && points[i] > -1 && !CB(i).Switching imply ((CB(i).connected == CB(i).segments[1]) imply Point(points[i]).Plus && (CB(i).connected == CB(i).segments[2]) imply Point(points[i]).Minus)
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,332KB / 30,900KB.
Property is satisfied.
A[] forall(i:t_id) forall(j:cB_id) (j > Train(i).index && j < Train(i).lockIndex && Train(i).requiresLock[j] imply CB(Train(i).boxes[j]).lockedBy == i)
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,340KB / 30,908KB.
Property is satisfied.
A[] forall(i:t_id) forall(j:seg_id) (j >= Train(i).index && j < Train(i).resSegIndex imply exists(l:int[0,2]) CB(Train(i).boxes[j+1]).segments[l] == Train(i).segments[j] && CB(Train(i).boxes[j+1]).res[l] == i) && (j > Train(i).index && j < Train(i).resCBIndex imply exists(l:int[0,2]) CB(Train(i).boxes[j]).segments[l] == Train(i).segments[j] && CB(Train(i).boxes[j]).res[l] == i)
Verification/kernel/elapsed time used: 0s / 0s / 0.005s.
Resident/virtual memory usage peaks: 9,364KB / 30,932KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).DoubleSegment imply Train(i).index+1 < Train(i).resSegIndex
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,368KB / 30,936KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).DoubleSegment imply Train(i).boxes[Train(i).index+1] != Train(i).boxes[Train(i).routeLength]
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,368KB / 30,936KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).DoubleSegment && points[Train(i).boxes[Train(i).index+1]] != -1 imply CB(Train(i).boxes[Train(i).index+1]).lockedBy == i
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,368KB / 30,936KB.
Property is satisfied.
A[] forall(i:cB_id) CB(i).Switched imply CB(i).lockedBy == -1
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,376KB / 30,944KB.
Property is satisfied.
A[] forall(i:cB_id) (CB(i).Switched || CB(i).Switching) imply !(exists(j:t_id) (Train(j).DoubleSegment && Train(j).boxes[Train(j).index+1] == i))
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,376KB / 30,944KB.
Property is satisfied.
A[] forall(i:t_id) forall(j:cB_id) (Train(i).Locking && CB(j).Switched && CB(j).tid == i) imply (exists(k:int[1,2]) (CB(j).segments[0] == Train(i).segments[Train(i).lockIndex-1] && CB(j).segments[k] == Train(i).segments[Train(i).lockIndex]) || (CB(j).segments[0] == Train(i).segments[Train(i).lockIndex] && CB(j).segments[k] == Train(i).segments[Train(i).lockIndex-1]))
Verification/kernel/elapsed time used: 0s / 0s / 0.006s.
Resident/virtual memory usage peaks: 9,620KB / 31,708KB.
Property is satisfied.
A[] forall(i:cB_id) CB(i).lockedBy != -1 imply CB(i).res[0] == CB(i).lockedBy && exists(j:int[0,2]) CB(i).segments[j] == CB(i).connected && CB(i).res[j] == CB(i).lockedBy
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,628KB / 31,716KB.
Property is satisfied.
A[] forall(i:cB_id) (CB(i).lockedBy != -1) imply (exists(j:cB_id) Train(CB(i).lockedBy).boxes[j] == i)
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,632KB / 31,720KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).locks <= lockLimit
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,560KB / 31,436KB.
Property is satisfied.
A[] forall(i:t_id) forall(j:cB_id) (Train(i).Reserving && CB(j).SegmentChecked && CB(j).tid == i && CB(j).result > -1) imply CB(j).res[CB(j).result] == -1
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,576KB / 31,452KB.
Property is satisfied.
A[] forall(i:t_id) forall(j:cB_id) (Train(i).Reserving && CB(j).SegmentChecked && CB(j).tid == i && CB(j).result > -1) imply (exists(k:int[0,2]) CB(j).segments[k] == Train(i).segments[Train(i).resSegIndex])
Verification/kernel/elapsed time used: 0s / 0s / 0.003s.
Resident/virtual memory usage peaks: 9,588KB / 31,464KB.
Property is satisfied.
A[] forall(i:cB_id) forall(j:int[0,2]) CB(i).res[j] != -1 imply exists(k:cB_id) Train(CB(i).res[j]).boxes[k] == i
Verification/kernel/elapsed time used: 0s / 0s / 0.002s.
Resident/virtual memory usage peaks: 9,604KB / 31,480KB.
Property is satisfied.
A[] forall(i:cB_id) forall(j:int[0,2]) CB(i).res[j] != -1 imply exists(k:seg_id) Train(CB(i).res[j]).segments[k] == CB(i).segments[j]
Verification/kernel/elapsed time used: 0s / 0s / 0.002s.
Resident/virtual memory usage peaks: 9,612KB / 31,488KB.
Property is satisfied.
A[] forall(i:t_id) Train(i).resSegIndex - 1 - Train(i).index <= resLimit
Verification/kernel/elapsed time used: 0s / 0s / 0.001s.
Resident/virtual memory usage peaks: 9,616KB / 31,492KB.
Property is satisfied.