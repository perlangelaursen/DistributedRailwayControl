// Station 12
const int NCB = 26; //Number of control boxes
const int NSEG = 37; //Number of segments
const int NTRAIN = 2; //Number of trains
const int NPOINT = 24; //Number of switchable points

//TYPES
typedef int[0, NTRAIN-1] t_id; //Train IDs
typedef int[0, NCB-1]  cB_id; //Control box IDs
typedef int[0, NPOINT-1] p_id; //Switch IDs
typedef int[0, NSEG-1] seg_id; //Segment IDs
typedef int[-1, NSEG-1] segV_id; //Segment IDs with -1
typedef int[-1, NPOINT-1] pV_id; //Switch IDs with -1
typedef int[-1, NCB-1] cBV_id; //Control Box IDs with -1
typedef int[-1, NTRAIN-1] tV_id; //Train IDs with -1

//EXAMPLE
const int[1,NCB] lockLimit = 2; //Max number of reservation (pairs)
const int[1,NSEG] resLimit = 2; //Max number of locks

const cB_id controlBoxes[NTRAIN][NCB] = {{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25}, {25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,-1}};
const segV_id routes[NTRAIN][NSEG]= {{0,1,3,4,6,7,9,10,12,13,15,16,18,19,21,22,24,25,27,28,30,31,32,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, {36,35,33,32,30,29,27,26,25,24,23, 21, 20, 18, 17, 15, 14, 12, 11, 9, 8, 6, 5, 3, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
const segV_id CBs[NCB][3]= {{0,-1,-1}, {0,1,2}, {3,1,2}, {3,4,5}, {6,4,5}, {6,7,8}, {9,7,8}, {9,10,11}, {12,10,11}, {12,13,14}, {15,13,14}, {15,16,17}, {18,16,17}, {18,19,20}, {21,19,20}, {21,22,23}, {24,22,23}, {24,25,26}, {27,25,26}, {27,28,29}, {30,28,29}, {30,31,32}, {33,31,32}, {33,34,35}, {36,34,35}, {36,-1,-1}}; //(stem, plus, minus)
const pV_id switches[NCB] = { -1, 0, 1, 2, 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,-1};
const bool initialConnections[NPOINT] = {true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true};

//Channels
chan resSeg[NCB][NTRAIN][NSEG]; //[switch box][train id][segment id]
chan switchh[NCB];
chan reqLock[NCB][NTRAIN][NSEG][NSEG]; //lock sb for t between two segments
chan OK[NTRAIN];
chan notOK[NTRAIN];
chan pass[NCB][NTRAIN]; //t passing s connected to sb
chan OKsb[NCB];
