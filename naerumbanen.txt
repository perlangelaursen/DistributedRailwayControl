// NÃ¦rumbanen
const int NCB = 14;
const int NSEG = 15;
const int NTRAIN = 2;
const int NPOINT = 6;

//TYPES
typedef int[0, NTRAIN-1] t_id;
typedef int[0, NCB-1]  cB_id;
typedef int[0, NPOINT-1] p_id;
typedef int[0, NSEG-1] seg_id;
typedef int[-1, NSEG-1] segV_id;
typedef int[-1, NPOINT-1] pV_id;
typedef int[-1, NCB-1] cBV_id;
typedef int[-1, NTRAIN-1] tV_id;
typedef struct {
    cB_id cb;
    seg_id seg;
} reservation;

//EXAMPLE
const int[1,NCB] lockLimit = 2;
const int[1,NSEG] resLimit = 2;

const cBV_id boxRoutes[NTRAIN][NCB] = {{0,2,3,4,5,6,7, 8, 9, 10, 11, 13, -1, -1}, {13, 11, 10, 9, 8,7,6,5,4,3,2,0,-1,-1}};
const segV_id segRoutes[NTRAIN][NSEG]= {{0,2,3,5,6,7,9,10,11,12,14, -1,-1,-1,-1}, {14,12,11,10,8,7,6,4,3,2,0,-1,-1,-1,-1}};
const segV_id cBs[NCB][3]= {{0,-1,-1}, {1, -1, -1}, {2, 0, 1}, {2, 3, -1}, {3, 5, 4}, {6,5,4}, {6,7,-1}, {7, 9, 8}, {10, 9, 8}, {10, 11, -1}, {11, 12, -1}, {12, 14, 13}, {13, -1, -1}, {14, -1, -1}};
const pV_id points[NCB] = { -1, -1, 0, -1, 1, 2, -1, 3, 4, -1, -1, 5, -1, -1};
const reservation initialRes[NTRAIN] = {{2, 0}, {11, 14}};
const bool pointInPlus[NPOINT] = {true, true, true, true, true, true};
