
//NO COLLISION
AG((~ccCol(t0,t1) & ~hcCol(t0,t1) & ~hhCol(t0,t1)) & (~ccCol(t1,t0) & ~hcCol(t1,t0) & ~hhCol(t1,t0)))

//NO DERAILMENT
//If a train is in a critical section, the point in that section is not in the middle of switching
AG(([passing(t0, cb11)] ~inSwitching(p10)) & ([passing(t0, cb13)] ~inSwitching(p11)) & ([passing(t0, cb10)] ~inSwitching(p9)) & ([passing(t0, cb9)] ~inSwitching(p8)) & ([passing(t0, cb8)] ~inSwitching(p7)) & ([passing(t0, cb7)] ~inSwitching(p6)) & ([passing(t0, cb6)] ~inSwitching(p5)) & ([passing(t0, cb5)] ~inSwitching(p4)) & ([passing(t0, cb4)] ~inSwitching(p3)) & ([passing(t0, cb3)] ~inSwitching(p2)) & ([passing(t0, cb2)] ~inSwitching(p1)) & ([passing(t0, cb1)] ~inSwitching(p0)) & ([passing(t1, cb1)] ~inSwitching(p0)) & ([passing(t1, cb2)] ~inSwitching(p1)) & ([passing(t1, cb3)] ~inSwitching(p2)) & ([passing(t1, cb4)] ~inSwitching(p3)) & ([passing(t1, cb5)] ~inSwitching(p4)) & ([passing(t1, cb6)] ~inSwitching(p5)) & ([passing(t1, cb7)] ~inSwitching(p6)) & ([passing(t1, cb8)] ~inSwitching(p7)) & ([passing(t1, cb9)] ~inSwitching(p8)) & ([passing(t1, cb10)] ~inSwitching(p9)) & ([passing(t1, cb13)] ~inSwitching(p11)) & ([passing(t1, cb11)] ~inSwitching(p10)))
//If a train is in a critical section, then the segments that it is moving on are connected
AG(([passing(t0, cb11)] (doublePos(t0,18,16) & connects(cb11,18,16))) & ([passing(t0, cb13)] (doublePos(t0,16,15) & connects(cb13,16,15))) & ([passing(t0, cb10)] (doublePos(t0,15,13) & connects(cb10,15,13))) & ([passing(t0, cb9)] (doublePos(t0,13,12) & connects(cb9,13,12))) & ([passing(t0, cb8)] (doublePos(t0,12,10) & connects(cb8,12,10))) & ([passing(t0, cb7)] (doublePos(t0,10,9) & connects(cb7,10,9))) & ([passing(t0, cb6)] (doublePos(t0,9,7) & connects(cb6,9,7))) & ([passing(t0, cb5)] (doublePos(t0,7,6) & connects(cb5,7,6))) & ([passing(t0, cb4)] (doublePos(t0,6,4) & connects(cb4,6,4))) & ([passing(t0, cb3)] (doublePos(t0,4,3) & connects(cb3,4,3))) & ([passing(t0, cb2)] (doublePos(t0,3,1) & connects(cb2,3,1))) & ([passing(t1, cb1)] (doublePos(t1,0,2) & connects(cb1,0,2))) & ([passing(t1, cb2)] (doublePos(t1,2,3) & connects(cb2,2,3))) & ([passing(t1, cb3)] (doublePos(t1,3,5) & connects(cb3,3,5))) & ([passing(t1, cb4)] (doublePos(t1,5,6) & connects(cb4,5,6))) & ([passing(t1, cb5)] (doublePos(t1,6,8) & connects(cb5,6,8))) & ([passing(t1, cb6)] (doublePos(t1,8,9) & connects(cb6,8,9))) & ([passing(t1, cb7)] (doublePos(t1,9,11) & connects(cb7,9,11))) & ([passing(t1, cb8)] (doublePos(t1,11,12) & connects(cb8,11,12))) & ([passing(t1, cb9)] (doublePos(t1,12,14) & connects(cb9,12,14))) & ([passing(t1, cb10)] (doublePos(t1,14,15) & connects(cb10,14,15))) & ([passing(t1, cb13)] (doublePos(t1,15,17) & connects(cb13,15,17))) & ([passing(t1, cb11)] (doublePos(t1,17,18) & connects(cb11,17,18))))

//OPERATION REQUIREMENTS: RESERVE
//A reservation is only requested if the requested segment is a part of the requesting train's route
~EF{reqSegS(t0,0) | reqSegS(t0,2) | reqSegS(t0,5) | reqSegS(t0,8) | reqSegS(t0,11) | reqSegS(t0,14) | reqSegS(t0,17) | reqSegS(t1,1) | reqSegS(t1,4) | reqSegS(t1,7) | reqSegS(t1,10) | reqSegS(t1,13) | reqSegS(t1,16)}
//A reservation is only requested if the control box that a train contacts is a part of the train's route
~EF{reqSegAt(t0,cb0) | reqSegAt(t0,cb12) | reqSegAt(t1,cb0)}
//A reservation is only successful if the requested segment is associated with the control box that receives the request and if it is not already reserved
AG((resOK(cb0,0) -> segFree(cb0,0)) & (resOK(cb1,0) -> segFree(cb1,0)) & (resOK(cb1,1) -> segFree(cb1,1)) & (resOK(cb1,2) -> segFree(cb1,2)) & (resOK(cb2,1) -> segFree(cb2,1)) & (resOK(cb2,2) -> segFree(cb2,2)) & (resOK(cb2,3) -> segFree(cb2,3)) & (resOK(cb3,3) -> segFree(cb3,3)) & (resOK(cb3,4) -> segFree(cb3,4)) & (resOK(cb3,5) -> segFree(cb3,5)) & (resOK(cb4,4) -> segFree(cb4,4)) & (resOK(cb4,5) -> segFree(cb4,5)) & (resOK(cb4,6) -> segFree(cb4,6)) & (resOK(cb5,6) -> segFree(cb5,6)) & (resOK(cb5,7) -> segFree(cb5,7)) & (resOK(cb5,8) -> segFree(cb5,8)) & (resOK(cb6,7) -> segFree(cb6,7)) & (resOK(cb6,8) -> segFree(cb6,8)) & (resOK(cb6,9) -> segFree(cb6,9)) & (resOK(cb7,9) -> segFree(cb7,9)) & (resOK(cb7,10) -> segFree(cb7,10)) & (resOK(cb7,11) -> segFree(cb7,11)) & (resOK(cb8,10) -> segFree(cb8,10)) & (resOK(cb8,11) -> segFree(cb8,11)) & (resOK(cb8,12) -> segFree(cb8,12)) & (resOK(cb9,12) -> segFree(cb9,12)) & (resOK(cb9,13) -> segFree(cb9,13)) & (resOK(cb9,14) -> segFree(cb9,14)) & (resOK(cb10,13) -> segFree(cb10,13)) & (resOK(cb10,14) -> segFree(cb10,14)) & (resOK(cb10,15) -> segFree(cb10,15)) & (resOK(cb11,16) -> segFree(cb11,16)) & (resOK(cb11,17) -> segFree(cb11,17)) & (resOK(cb11,18) -> segFree(cb11,18)) & (resOK(cb12,18) -> segFree(cb12,18)) & (resOK(cb13,15) -> segFree(cb13,15)) & (resOK(cb13,16) -> segFree(cb13,16)) & (resOK(cb13,17) -> segFree(cb13,17)))

//OPERATION REQUIREMENTS: LOCK
//A train never has more locks than the lock limit
~EF(lockLimitExceeded(t0) | lockLimitExceeded(t1))
//A lock is only requested if the involved switch box is in the route of the requesting train
~EF{reqLock(t0,cb0) | reqLock(t0,cb12) | reqLock(t1,cb0)}
//A lock is only requested if the requesting train has the reservation for the two segments at the switch box
AG(([reqLocking(t0,cb11,18,16)] -> (reserved(t0,18,cb11) & reserved(t0,16,cb11))) & ([reqLocking(t0,cb13,16,15)] -> (reserved(t0,16,cb13) & reserved(t0,15,cb13))) & ([reqLocking(t0,cb10,15,13)] -> (reserved(t0,15,cb10) & reserved(t0,13,cb10))) & ([reqLocking(t0,cb9,13,12)] -> (reserved(t0,13,cb9) & reserved(t0,12,cb9))) & ([reqLocking(t0,cb8,12,10)] -> (reserved(t0,12,cb8) & reserved(t0,10,cb8))) & ([reqLocking(t0,cb7,10,9)] -> (reserved(t0,10,cb7) & reserved(t0,9,cb7))) & ([reqLocking(t0,cb6,9,7)] -> (reserved(t0,9,cb6) & reserved(t0,7,cb6))) & ([reqLocking(t0,cb5,7,6)] -> (reserved(t0,7,cb5) & reserved(t0,6,cb5))) & ([reqLocking(t0,cb4,6,4)] -> (reserved(t0,6,cb4) & reserved(t0,4,cb4))) & ([reqLocking(t0,cb3,4,3)] -> (reserved(t0,4,cb3) & reserved(t0,3,cb3))) & ([reqLocking(t0,cb2,3,1)] -> (reserved(t0,3,cb2) & reserved(t0,1,cb2))) & ([reqLocking(t1,cb1,0,2)] -> (reserved(t1,0,cb1) & reserved(t1,2,cb1))) & ([reqLocking(t1,cb2,2,3)] -> (reserved(t1,2,cb2) & reserved(t1,3,cb2))) & ([reqLocking(t1,cb3,3,5)] -> (reserved(t1,3,cb3) & reserved(t1,5,cb3))) & ([reqLocking(t1,cb4,5,6)] -> (reserved(t1,5,cb4) & reserved(t1,6,cb4))) & ([reqLocking(t1,cb5,6,8)] -> (reserved(t1,6,cb5) & reserved(t1,8,cb5))) & ([reqLocking(t1,cb6,8,9)] -> (reserved(t1,8,cb6) & reserved(t1,9,cb6))) & ([reqLocking(t1,cb7,9,11)] -> (reserved(t1,9,cb7) & reserved(t1,11,cb7))) & ([reqLocking(t1,cb8,11,12)] -> (reserved(t1,11,cb8) & reserved(t1,12,cb8))) & ([reqLocking(t1,cb9,12,14)] -> (reserved(t1,12,cb9) & reserved(t1,14,cb9))) & ([reqLocking(t1,cb10,14,15)] -> (reserved(t1,14,cb10) & reserved(t1,15,cb10))) & ([reqLocking(t1,cb13,15,17)] -> (reserved(t1,15,cb13) & reserved(t1,17,cb13))) & ([reqLocking(t1,cb11,17,18)] -> (reserved(t1,17,cb11) & reserved(t1,18,cb11))))
//A lock is only successful if the point involved in the request was unlocked prior to the request
AG((inSwitched(cb0) -> lockedBy(cb0,null)) & (inSwitched(cb1) -> lockedBy(cb1,null)) & (inSwitched(cb2) -> lockedBy(cb2,null)) & (inSwitched(cb3) -> lockedBy(cb3,null)) & (inSwitched(cb4) -> lockedBy(cb4,null)) & (inSwitched(cb5) -> lockedBy(cb5,null)) & (inSwitched(cb6) -> lockedBy(cb6,null)) & (inSwitched(cb7) -> lockedBy(cb7,null)) & (inSwitched(cb8) -> lockedBy(cb8,null)) & (inSwitched(cb9) -> lockedBy(cb9,null)) & (inSwitched(cb10) -> lockedBy(cb10,null)) & (inSwitched(cb11) -> lockedBy(cb11,null)) & (inSwitched(cb12) -> lockedBy(cb12,null)) & (inSwitched(cb13) -> lockedBy(cb13,null)))
//A switch is only requested if the requested connection is of segments that are adjacent in the train's route
~EF{reqLockingS(t0,0,0) | reqLockingS(t0,0,1) | reqLockingS(t0,0,2) | reqLockingS(t0,0,3) | reqLockingS(t0,0,4) | reqLockingS(t0,0,5) | reqLockingS(t0,0,6) | reqLockingS(t0,0,7) | reqLockingS(t0,0,8) | reqLockingS(t0,0,9) | reqLockingS(t0,0,10) | reqLockingS(t0,0,11) | reqLockingS(t0,0,12) | reqLockingS(t0,0,13) | reqLockingS(t0,0,14) | reqLockingS(t0,0,15) | reqLockingS(t0,0,16) | reqLockingS(t0,0,17) | reqLockingS(t0,0,18) | reqLockingS(t0,2,0) | reqLockingS(t0,2,1) | reqLockingS(t0,2,2) | reqLockingS(t0,2,3) | reqLockingS(t0,2,4) | reqLockingS(t0,2,5) | reqLockingS(t0,2,6) | reqLockingS(t0,2,7) | reqLockingS(t0,2,8) | reqLockingS(t0,2,9) | reqLockingS(t0,2,10) | reqLockingS(t0,2,11) | reqLockingS(t0,2,12) | reqLockingS(t0,2,13) | reqLockingS(t0,2,14) | reqLockingS(t0,2,15) | reqLockingS(t0,2,16) | reqLockingS(t0,2,17) | reqLockingS(t0,2,18) | reqLockingS(t0,3,0) | reqLockingS(t0,3,2) | reqLockingS(t0,3,3) | reqLockingS(t0,3,4) | reqLockingS(t0,3,5) | reqLockingS(t0,3,6) | reqLockingS(t0,3,7) | reqLockingS(t0,3,8) | reqLockingS(t0,3,9) | reqLockingS(t0,3,10) | reqLockingS(t0,3,11) | reqLockingS(t0,3,12) | reqLockingS(t0,3,13) | reqLockingS(t0,3,14) | reqLockingS(t0,3,15) | reqLockingS(t0,3,16) | reqLockingS(t0,3,17) | reqLockingS(t0,3,18) | reqLockingS(t0,4,0) | reqLockingS(t0,4,1) | reqLockingS(t0,4,2) | reqLockingS(t0,4,4) | reqLockingS(t0,4,5) | reqLockingS(t0,4,6) | reqLockingS(t0,4,7) | reqLockingS(t0,4,8) | reqLockingS(t0,4,9) | reqLockingS(t0,4,10) | reqLockingS(t0,4,11) | reqLockingS(t0,4,12) | reqLockingS(t0,4,13) | reqLockingS(t0,4,14) | reqLockingS(t0,4,15) | reqLockingS(t0,4,16) | reqLockingS(t0,4,17) | reqLockingS(t0,4,18) | reqLockingS(t0,5,0) | reqLockingS(t0,5,1) | reqLockingS(t0,5,2) | reqLockingS(t0,5,3) | reqLockingS(t0,5,4) | reqLockingS(t0,5,5) | reqLockingS(t0,5,6) | reqLockingS(t0,5,7) | reqLockingS(t0,5,8) | reqLockingS(t0,5,9) | reqLockingS(t0,5,10) | reqLockingS(t0,5,11) | reqLockingS(t0,5,12) | reqLockingS(t0,5,13) | reqLockingS(t0,5,14) | reqLockingS(t0,5,15) | reqLockingS(t0,5,16) | reqLockingS(t0,5,17) | reqLockingS(t0,5,18) | reqLockingS(t0,6,0) | reqLockingS(t0,6,1) | reqLockingS(t0,6,2) | reqLockingS(t0,6,3) | reqLockingS(t0,6,5) | reqLockingS(t0,6,6) | reqLockingS(t0,6,7) | reqLockingS(t0,6,8) | reqLockingS(t0,6,9) | reqLockingS(t0,6,10) | reqLockingS(t0,6,11) | reqLockingS(t0,6,12) | reqLockingS(t0,6,13) | reqLockingS(t0,6,14) | reqLockingS(t0,6,15) | reqLockingS(t0,6,16) | reqLockingS(t0,6,17) | reqLockingS(t0,6,18) | reqLockingS(t0,7,0) | reqLockingS(t0,7,1) | reqLockingS(t0,7,2) | reqLockingS(t0,7,3) | reqLockingS(t0,7,4) | reqLockingS(t0,7,5) | reqLockingS(t0,7,7) | reqLockingS(t0,7,8) | reqLockingS(t0,7,9) | reqLockingS(t0,7,10) | reqLockingS(t0,7,11) | reqLockingS(t0,7,12) | reqLockingS(t0,7,13) | reqLockingS(t0,7,14) | reqLockingS(t0,7,15) | reqLockingS(t0,7,16) | reqLockingS(t0,7,17) | reqLockingS(t0,7,18) | reqLockingS(t0,8,0) | reqLockingS(t0,8,1) | reqLockingS(t0,8,2) | reqLockingS(t0,8,3) | reqLockingS(t0,8,4) | reqLockingS(t0,8,5) | reqLockingS(t0,8,6) | reqLockingS(t0,8,7) | reqLockingS(t0,8,8) | reqLockingS(t0,8,9) | reqLockingS(t0,8,10) | reqLockingS(t0,8,11) | reqLockingS(t0,8,12) | reqLockingS(t0,8,13) | reqLockingS(t0,8,14) | reqLockingS(t0,8,15) | reqLockingS(t0,8,16) | reqLockingS(t0,8,17) | reqLockingS(t0,8,18) | reqLockingS(t0,9,0) | reqLockingS(t0,9,1) | reqLockingS(t0,9,2) | reqLockingS(t0,9,3) | reqLockingS(t0,9,4) | reqLockingS(t0,9,5) | reqLockingS(t0,9,6) | reqLockingS(t0,9,8) | reqLockingS(t0,9,9) | reqLockingS(t0,9,10) | reqLockingS(t0,9,11) | reqLockingS(t0,9,12) | reqLockingS(t0,9,13) | reqLockingS(t0,9,14) | reqLockingS(t0,9,15) | reqLockingS(t0,9,16) | reqLockingS(t0,9,17) | reqLockingS(t0,9,18) | reqLockingS(t0,10,0) | reqLockingS(t0,10,1) | reqLockingS(t0,10,2) | reqLockingS(t0,10,3) | reqLockingS(t0,10,4) | reqLockingS(t0,10,5) | reqLockingS(t0,10,6) | reqLockingS(t0,10,7) | reqLockingS(t0,10,8) | reqLockingS(t0,10,10) | reqLockingS(t0,10,11) | reqLockingS(t0,10,12) | reqLockingS(t0,10,13) | reqLockingS(t0,10,14) | reqLockingS(t0,10,15) | reqLockingS(t0,10,16) | reqLockingS(t0,10,17) | reqLockingS(t0,10,18) | reqLockingS(t0,11,0) | reqLockingS(t0,11,1) | reqLockingS(t0,11,2) | reqLockingS(t0,11,3) | reqLockingS(t0,11,4) | reqLockingS(t0,11,5) | reqLockingS(t0,11,6) | reqLockingS(t0,11,7) | reqLockingS(t0,11,8) | reqLockingS(t0,11,9) | reqLockingS(t0,11,10) | reqLockingS(t0,11,11) | reqLockingS(t0,11,12) | reqLockingS(t0,11,13) | reqLockingS(t0,11,14) | reqLockingS(t0,11,15) | reqLockingS(t0,11,16) | reqLockingS(t0,11,17) | reqLockingS(t0,11,18) | reqLockingS(t0,12,0) | reqLockingS(t0,12,1) | reqLockingS(t0,12,2) | reqLockingS(t0,12,3) | reqLockingS(t0,12,4) | reqLockingS(t0,12,5) | reqLockingS(t0,12,6) | reqLockingS(t0,12,7) | reqLockingS(t0,12,8) | reqLockingS(t0,12,9) | reqLockingS(t0,12,11) | reqLockingS(t0,12,12) | reqLockingS(t0,12,13) | reqLockingS(t0,12,14) | reqLockingS(t0,12,15) | reqLockingS(t0,12,16) | reqLockingS(t0,12,17) | reqLockingS(t0,12,18) | reqLockingS(t0,13,0) | reqLockingS(t0,13,1) | reqLockingS(t0,13,2) | reqLockingS(t0,13,3) | reqLockingS(t0,13,4) | reqLockingS(t0,13,5) | reqLockingS(t0,13,6) | reqLockingS(t0,13,7) | reqLockingS(t0,13,8) | reqLockingS(t0,13,9) | reqLockingS(t0,13,10) | reqLockingS(t0,13,11) | reqLockingS(t0,13,13) | reqLockingS(t0,13,14) | reqLockingS(t0,13,15) | reqLockingS(t0,13,16) | reqLockingS(t0,13,17) | reqLockingS(t0,13,18) | reqLockingS(t0,14,0) | reqLockingS(t0,14,1) | reqLockingS(t0,14,2) | reqLockingS(t0,14,3) | reqLockingS(t0,14,4) | reqLockingS(t0,14,5) | reqLockingS(t0,14,6) | reqLockingS(t0,14,7) | reqLockingS(t0,14,8) | reqLockingS(t0,14,9) | reqLockingS(t0,14,10) | reqLockingS(t0,14,11) | reqLockingS(t0,14,12) | reqLockingS(t0,14,13) | reqLockingS(t0,14,14) | reqLockingS(t0,14,15) | reqLockingS(t0,14,16) | reqLockingS(t0,14,17) | reqLockingS(t0,14,18) | reqLockingS(t0,15,0) | reqLockingS(t0,15,1) | reqLockingS(t0,15,2) | reqLockingS(t0,15,3) | reqLockingS(t0,15,4) | reqLockingS(t0,15,5) | reqLockingS(t0,15,6) | reqLockingS(t0,15,7) | reqLockingS(t0,15,8) | reqLockingS(t0,15,9) | reqLockingS(t0,15,10) | reqLockingS(t0,15,11) | reqLockingS(t0,15,12) | reqLockingS(t0,15,14) | reqLockingS(t0,15,15) | reqLockingS(t0,15,16) | reqLockingS(t0,15,17) | reqLockingS(t0,15,18) | reqLockingS(t0,16,0) | reqLockingS(t0,16,1) | reqLockingS(t0,16,2) | reqLockingS(t0,16,3) | reqLockingS(t0,16,4) | reqLockingS(t0,16,5) | reqLockingS(t0,16,6) | reqLockingS(t0,16,7) | reqLockingS(t0,16,8) | reqLockingS(t0,16,9) | reqLockingS(t0,16,10) | reqLockingS(t0,16,11) | reqLockingS(t0,16,12) | reqLockingS(t0,16,13) | reqLockingS(t0,16,14) | reqLockingS(t0,16,16) | reqLockingS(t0,16,17) | reqLockingS(t0,16,18) | reqLockingS(t0,17,0) | reqLockingS(t0,17,1) | reqLockingS(t0,17,2) | reqLockingS(t0,17,3) | reqLockingS(t0,17,4) | reqLockingS(t0,17,5) | reqLockingS(t0,17,6) | reqLockingS(t0,17,7) | reqLockingS(t0,17,8) | reqLockingS(t0,17,9) | reqLockingS(t0,17,10) | reqLockingS(t0,17,11) | reqLockingS(t0,17,12) | reqLockingS(t0,17,13) | reqLockingS(t0,17,14) | reqLockingS(t0,17,15) | reqLockingS(t0,17,16) | reqLockingS(t0,17,17) | reqLockingS(t0,17,18) | reqLockingS(t0,18,0) | reqLockingS(t0,18,1) | reqLockingS(t0,18,2) | reqLockingS(t0,18,3) | reqLockingS(t0,18,4) | reqLockingS(t0,18,5) | reqLockingS(t0,18,6) | reqLockingS(t0,18,7) | reqLockingS(t0,18,8) | reqLockingS(t0,18,9) | reqLockingS(t0,18,10) | reqLockingS(t0,18,11) | reqLockingS(t0,18,12) | reqLockingS(t0,18,13) | reqLockingS(t0,18,14) | reqLockingS(t0,18,15) | reqLockingS(t0,18,17) | reqLockingS(t0,18,18) | reqLockingS(t1,0,0) | reqLockingS(t1,0,1) | reqLockingS(t1,0,3) | reqLockingS(t1,0,4) | reqLockingS(t1,0,5) | reqLockingS(t1,0,6) | reqLockingS(t1,0,7) | reqLockingS(t1,0,8) | reqLockingS(t1,0,9) | reqLockingS(t1,0,10) | reqLockingS(t1,0,11) | reqLockingS(t1,0,12) | reqLockingS(t1,0,13) | reqLockingS(t1,0,14) | reqLockingS(t1,0,15) | reqLockingS(t1,0,16) | reqLockingS(t1,0,17) | reqLockingS(t1,0,18) | reqLockingS(t1,1,0) | reqLockingS(t1,1,1) | reqLockingS(t1,1,2) | reqLockingS(t1,1,3) | reqLockingS(t1,1,4) | reqLockingS(t1,1,5) | reqLockingS(t1,1,6) | reqLockingS(t1,1,7) | reqLockingS(t1,1,8) | reqLockingS(t1,1,9) | reqLockingS(t1,1,10) | reqLockingS(t1,1,11) | reqLockingS(t1,1,12) | reqLockingS(t1,1,13) | reqLockingS(t1,1,14) | reqLockingS(t1,1,15) | reqLockingS(t1,1,16) | reqLockingS(t1,1,17) | reqLockingS(t1,1,18) | reqLockingS(t1,2,0) | reqLockingS(t1,2,1) | reqLockingS(t1,2,2) | reqLockingS(t1,2,4) | reqLockingS(t1,2,5) | reqLockingS(t1,2,6) | reqLockingS(t1,2,7) | reqLockingS(t1,2,8) | reqLockingS(t1,2,9) | reqLockingS(t1,2,10) | reqLockingS(t1,2,11) | reqLockingS(t1,2,12) | reqLockingS(t1,2,13) | reqLockingS(t1,2,14) | reqLockingS(t1,2,15) | reqLockingS(t1,2,16) | reqLockingS(t1,2,17) | reqLockingS(t1,2,18) | reqLockingS(t1,3,0) | reqLockingS(t1,3,1) | reqLockingS(t1,3,2) | reqLockingS(t1,3,3) | reqLockingS(t1,3,4) | reqLockingS(t1,3,6) | reqLockingS(t1,3,7) | reqLockingS(t1,3,8) | reqLockingS(t1,3,9) | reqLockingS(t1,3,10) | reqLockingS(t1,3,11) | reqLockingS(t1,3,12) | reqLockingS(t1,3,13) | reqLockingS(t1,3,14) | reqLockingS(t1,3,15) | reqLockingS(t1,3,16) | reqLockingS(t1,3,17) | reqLockingS(t1,3,18) | reqLockingS(t1,4,0) | reqLockingS(t1,4,1) | reqLockingS(t1,4,2) | reqLockingS(t1,4,3) | reqLockingS(t1,4,4) | reqLockingS(t1,4,5) | reqLockingS(t1,4,6) | reqLockingS(t1,4,7) | reqLockingS(t1,4,8) | reqLockingS(t1,4,9) | reqLockingS(t1,4,10) | reqLockingS(t1,4,11) | reqLockingS(t1,4,12) | reqLockingS(t1,4,13) | reqLockingS(t1,4,14) | reqLockingS(t1,4,15) | reqLockingS(t1,4,16) | reqLockingS(t1,4,17) | reqLockingS(t1,4,18) | reqLockingS(t1,5,0) | reqLockingS(t1,5,1) | reqLockingS(t1,5,2) | reqLockingS(t1,5,3) | reqLockingS(t1,5,4) | reqLockingS(t1,5,5) | reqLockingS(t1,5,7) | reqLockingS(t1,5,8) | reqLockingS(t1,5,9) | reqLockingS(t1,5,10) | reqLockingS(t1,5,11) | reqLockingS(t1,5,12) | reqLockingS(t1,5,13) | reqLockingS(t1,5,14) | reqLockingS(t1,5,15) | reqLockingS(t1,5,16) | reqLockingS(t1,5,17) | reqLockingS(t1,5,18) | reqLockingS(t1,6,0) | reqLockingS(t1,6,1) | reqLockingS(t1,6,2) | reqLockingS(t1,6,3) | reqLockingS(t1,6,4) | reqLockingS(t1,6,5) | reqLockingS(t1,6,6) | reqLockingS(t1,6,7) | reqLockingS(t1,6,9) | reqLockingS(t1,6,10) | reqLockingS(t1,6,11) | reqLockingS(t1,6,12) | reqLockingS(t1,6,13) | reqLockingS(t1,6,14) | reqLockingS(t1,6,15) | reqLockingS(t1,6,16) | reqLockingS(t1,6,17) | reqLockingS(t1,6,18) | reqLockingS(t1,7,0) | reqLockingS(t1,7,1) | reqLockingS(t1,7,2) | reqLockingS(t1,7,3) | reqLockingS(t1,7,4) | reqLockingS(t1,7,5) | reqLockingS(t1,7,6) | reqLockingS(t1,7,7) | reqLockingS(t1,7,8) | reqLockingS(t1,7,9) | reqLockingS(t1,7,10) | reqLockingS(t1,7,11) | reqLockingS(t1,7,12) | reqLockingS(t1,7,13) | reqLockingS(t1,7,14) | reqLockingS(t1,7,15) | reqLockingS(t1,7,16) | reqLockingS(t1,7,17) | reqLockingS(t1,7,18) | reqLockingS(t1,8,0) | reqLockingS(t1,8,1) | reqLockingS(t1,8,2) | reqLockingS(t1,8,3) | reqLockingS(t1,8,4) | reqLockingS(t1,8,5) | reqLockingS(t1,8,6) | reqLockingS(t1,8,7) | reqLockingS(t1,8,8) | reqLockingS(t1,8,10) | reqLockingS(t1,8,11) | reqLockingS(t1,8,12) | reqLockingS(t1,8,13) | reqLockingS(t1,8,14) | reqLockingS(t1,8,15) | reqLockingS(t1,8,16) | reqLockingS(t1,8,17) | reqLockingS(t1,8,18) | reqLockingS(t1,9,0) | reqLockingS(t1,9,1) | reqLockingS(t1,9,2) | reqLockingS(t1,9,3) | reqLockingS(t1,9,4) | reqLockingS(t1,9,5) | reqLockingS(t1,9,6) | reqLockingS(t1,9,7) | reqLockingS(t1,9,8) | reqLockingS(t1,9,9) | reqLockingS(t1,9,10) | reqLockingS(t1,9,12) | reqLockingS(t1,9,13) | reqLockingS(t1,9,14) | reqLockingS(t1,9,15) | reqLockingS(t1,9,16) | reqLockingS(t1,9,17) | reqLockingS(t1,9,18) | reqLockingS(t1,10,0) | reqLockingS(t1,10,1) | reqLockingS(t1,10,2) | reqLockingS(t1,10,3) | reqLockingS(t1,10,4) | reqLockingS(t1,10,5) | reqLockingS(t1,10,6) | reqLockingS(t1,10,7) | reqLockingS(t1,10,8) | reqLockingS(t1,10,9) | reqLockingS(t1,10,10) | reqLockingS(t1,10,11) | reqLockingS(t1,10,12) | reqLockingS(t1,10,13) | reqLockingS(t1,10,14) | reqLockingS(t1,10,15) | reqLockingS(t1,10,16) | reqLockingS(t1,10,17) | reqLockingS(t1,10,18) | reqLockingS(t1,11,0) | reqLockingS(t1,11,1) | reqLockingS(t1,11,2) | reqLockingS(t1,11,3) | reqLockingS(t1,11,4) | reqLockingS(t1,11,5) | reqLockingS(t1,11,6) | reqLockingS(t1,11,7) | reqLockingS(t1,11,8) | reqLockingS(t1,11,9) | reqLockingS(t1,11,10) | reqLockingS(t1,11,11) | reqLockingS(t1,11,13) | reqLockingS(t1,11,14) | reqLockingS(t1,11,15) | reqLockingS(t1,11,16) | reqLockingS(t1,11,17) | reqLockingS(t1,11,18) | reqLockingS(t1,12,0) | reqLockingS(t1,12,1) | reqLockingS(t1,12,2) | reqLockingS(t1,12,3) | reqLockingS(t1,12,4) | reqLockingS(t1,12,5) | reqLockingS(t1,12,6) | reqLockingS(t1,12,7) | reqLockingS(t1,12,8) | reqLockingS(t1,12,9) | reqLockingS(t1,12,10) | reqLockingS(t1,12,11) | reqLockingS(t1,12,12) | reqLockingS(t1,12,13) | reqLockingS(t1,12,15) | reqLockingS(t1,12,16) | reqLockingS(t1,12,17) | reqLockingS(t1,12,18) | reqLockingS(t1,13,0) | reqLockingS(t1,13,1) | reqLockingS(t1,13,2) | reqLockingS(t1,13,3) | reqLockingS(t1,13,4) | reqLockingS(t1,13,5) | reqLockingS(t1,13,6) | reqLockingS(t1,13,7) | reqLockingS(t1,13,8) | reqLockingS(t1,13,9) | reqLockingS(t1,13,10) | reqLockingS(t1,13,11) | reqLockingS(t1,13,12) | reqLockingS(t1,13,13) | reqLockingS(t1,13,14) | reqLockingS(t1,13,15) | reqLockingS(t1,13,16) | reqLockingS(t1,13,17) | reqLockingS(t1,13,18) | reqLockingS(t1,14,0) | reqLockingS(t1,14,1) | reqLockingS(t1,14,2) | reqLockingS(t1,14,3) | reqLockingS(t1,14,4) | reqLockingS(t1,14,5) | reqLockingS(t1,14,6) | reqLockingS(t1,14,7) | reqLockingS(t1,14,8) | reqLockingS(t1,14,9) | reqLockingS(t1,14,10) | reqLockingS(t1,14,11) | reqLockingS(t1,14,12) | reqLockingS(t1,14,13) | reqLockingS(t1,14,14) | reqLockingS(t1,14,16) | reqLockingS(t1,14,17) | reqLockingS(t1,14,18) | reqLockingS(t1,15,0) | reqLockingS(t1,15,1) | reqLockingS(t1,15,2) | reqLockingS(t1,15,3) | reqLockingS(t1,15,4) | reqLockingS(t1,15,5) | reqLockingS(t1,15,6) | reqLockingS(t1,15,7) | reqLockingS(t1,15,8) | reqLockingS(t1,15,9) | reqLockingS(t1,15,10) | reqLockingS(t1,15,11) | reqLockingS(t1,15,12) | reqLockingS(t1,15,13) | reqLockingS(t1,15,14) | reqLockingS(t1,15,15) | reqLockingS(t1,15,16) | reqLockingS(t1,15,18) | reqLockingS(t1,16,0) | reqLockingS(t1,16,1) | reqLockingS(t1,16,2) | reqLockingS(t1,16,3) | reqLockingS(t1,16,4) | reqLockingS(t1,16,5) | reqLockingS(t1,16,6) | reqLockingS(t1,16,7) | reqLockingS(t1,16,8) | reqLockingS(t1,16,9) | reqLockingS(t1,16,10) | reqLockingS(t1,16,11) | reqLockingS(t1,16,12) | reqLockingS(t1,16,13) | reqLockingS(t1,16,14) | reqLockingS(t1,16,15) | reqLockingS(t1,16,16) | reqLockingS(t1,16,17) | reqLockingS(t1,16,18) | reqLockingS(t1,17,0) | reqLockingS(t1,17,1) | reqLockingS(t1,17,2) | reqLockingS(t1,17,3) | reqLockingS(t1,17,4) | reqLockingS(t1,17,5) | reqLockingS(t1,17,6) | reqLockingS(t1,17,7) | reqLockingS(t1,17,8) | reqLockingS(t1,17,9) | reqLockingS(t1,17,10) | reqLockingS(t1,17,11) | reqLockingS(t1,17,12) | reqLockingS(t1,17,13) | reqLockingS(t1,17,14) | reqLockingS(t1,17,15) | reqLockingS(t1,17,16) | reqLockingS(t1,17,17)}
//A switch is only successful if the requested conenction is of the stem segment and plus or minus segment of the switch box
AG(([reqLocking(t0,cb11,18,16)] canConnect(cb11,18,16)) & ([reqLocking(t0,cb13,16,15)] canConnect(cb13,16,15)) & ([reqLocking(t0,cb10,15,13)] canConnect(cb10,15,13)) & ([reqLocking(t0,cb9,13,12)] canConnect(cb9,13,12)) & ([reqLocking(t0,cb8,12,10)] canConnect(cb8,12,10)) & ([reqLocking(t0,cb7,10,9)] canConnect(cb7,10,9)) & ([reqLocking(t0,cb6,9,7)] canConnect(cb6,9,7)) & ([reqLocking(t0,cb5,7,6)] canConnect(cb5,7,6)) & ([reqLocking(t0,cb4,6,4)] canConnect(cb4,6,4)) & ([reqLocking(t0,cb3,4,3)] canConnect(cb3,4,3)) & ([reqLocking(t0,cb2,3,1)] canConnect(cb2,3,1)) & ([reqLocking(t1,cb1,0,2)] canConnect(cb1,0,2)) & ([reqLocking(t1,cb2,2,3)] canConnect(cb2,2,3)) & ([reqLocking(t1,cb3,3,5)] canConnect(cb3,3,5)) & ([reqLocking(t1,cb4,5,6)] canConnect(cb4,5,6)) & ([reqLocking(t1,cb5,6,8)] canConnect(cb5,6,8)) & ([reqLocking(t1,cb6,8,9)] canConnect(cb6,8,9)) & ([reqLocking(t1,cb7,9,11)] canConnect(cb7,9,11)) & ([reqLocking(t1,cb8,11,12)] canConnect(cb8,11,12)) & ([reqLocking(t1,cb9,12,14)] canConnect(cb9,12,14)) & ([reqLocking(t1,cb10,14,15)] canConnect(cb10,14,15)) & ([reqLocking(t1,cb13,15,17)] canConnect(cb13,15,17)) & ([reqLocking(t1,cb11,17,18)] canConnect(cb11,17,18)))
//A control box only switches and locks its point if no train is in its critical section
AG(([switching(cb0)] (~inCrit(cb0,t0) & ~inCrit(cb0,t1))) & ([switching(cb1)] (~inCrit(cb1,t0) & ~inCrit(cb1,t1))) & ([switching(cb2)] (~inCrit(cb2,t0) & ~inCrit(cb2,t1))) & ([switching(cb3)] (~inCrit(cb3,t0) & ~inCrit(cb3,t1))) & ([switching(cb4)] (~inCrit(cb4,t0) & ~inCrit(cb4,t1))) & ([switching(cb5)] (~inCrit(cb5,t0) & ~inCrit(cb5,t1))) & ([switching(cb6)] (~inCrit(cb6,t0) & ~inCrit(cb6,t1))) & ([switching(cb7)] (~inCrit(cb7,t0) & ~inCrit(cb7,t1))) & ([switching(cb8)] (~inCrit(cb8,t0) & ~inCrit(cb8,t1))) & ([switching(cb9)] (~inCrit(cb9,t0) & ~inCrit(cb9,t1))) & ([switching(cb10)] (~inCrit(cb10,t0) & ~inCrit(cb10,t1))) & ([switching(cb11)] (~inCrit(cb11,t0) & ~inCrit(cb11,t1))) & ([switching(cb12)] (~inCrit(cb12,t0) & ~inCrit(cb12,t1))) & ([switching(cb13)] (~inCrit(cb13,t0) & ~inCrit(cb13,t1))))

//OPERATION REQUIREMENTS: PASS
//A train only passes a switch box if it has been locked for the train
AG(((doublePos(t0,18,16) & isSwitchBox(cb11)) -> locked(t0,cb11)) & ((doublePos(t0,16,15) & isSwitchBox(cb13)) -> locked(t0,cb13)) & ((doublePos(t0,15,13) & isSwitchBox(cb10)) -> locked(t0,cb10)) & ((doublePos(t0,13,12) & isSwitchBox(cb9)) -> locked(t0,cb9)) & ((doublePos(t0,12,10) & isSwitchBox(cb8)) -> locked(t0,cb8)) & ((doublePos(t0,10,9) & isSwitchBox(cb7)) -> locked(t0,cb7)) & ((doublePos(t0,9,7) & isSwitchBox(cb6)) -> locked(t0,cb6)) & ((doublePos(t0,7,6) & isSwitchBox(cb5)) -> locked(t0,cb5)) & ((doublePos(t0,6,4) & isSwitchBox(cb4)) -> locked(t0,cb4)) & ((doublePos(t0,4,3) & isSwitchBox(cb3)) -> locked(t0,cb3)) & ((doublePos(t0,3,1) & isSwitchBox(cb2)) -> locked(t0,cb2)) & ((doublePos(t1,0,2) & isSwitchBox(cb1)) -> locked(t1,cb1)) & ((doublePos(t1,2,3) & isSwitchBox(cb2)) -> locked(t1,cb2)) & ((doublePos(t1,3,5) & isSwitchBox(cb3)) -> locked(t1,cb3)) & ((doublePos(t1,5,6) & isSwitchBox(cb4)) -> locked(t1,cb4)) & ((doublePos(t1,6,8) & isSwitchBox(cb5)) -> locked(t1,cb5)) & ((doublePos(t1,8,9) & isSwitchBox(cb6)) -> locked(t1,cb6)) & ((doublePos(t1,9,11) & isSwitchBox(cb7)) -> locked(t1,cb7)) & ((doublePos(t1,11,12) & isSwitchBox(cb8)) -> locked(t1,cb8)) & ((doublePos(t1,12,14) & isSwitchBox(cb9)) -> locked(t1,cb9)) & ((doublePos(t1,14,15) & isSwitchBox(cb10)) -> locked(t1,cb10)) & ((doublePos(t1,15,17) & isSwitchBox(cb13)) -> locked(t1,cb13)) & ((doublePos(t1,17,18) & isSwitchBox(cb11)) -> locked(t1,cb11)))
//A train never passes the last control box on its route
~EF{passing(t0,cb1) & passing(t1,cb12)}
//A train only enters a segment that it has the full reservation of
AG((doublePos(t0,18,16) -> (reserved(t0,16,cb11) & reserved(t0,16,cb13))) & (doublePos(t0,16,15) -> (reserved(t0,15,cb13) & reserved(t0,15,cb10))) & (doublePos(t0,15,13) -> (reserved(t0,13,cb10) & reserved(t0,13,cb9))) & (doublePos(t0,13,12) -> (reserved(t0,12,cb9) & reserved(t0,12,cb8))) & (doublePos(t0,12,10) -> (reserved(t0,10,cb8) & reserved(t0,10,cb7))) & (doublePos(t0,10,9) -> (reserved(t0,9,cb7) & reserved(t0,9,cb6))) & (doublePos(t0,9,7) -> (reserved(t0,7,cb6) & reserved(t0,7,cb5))) & (doublePos(t0,7,6) -> (reserved(t0,6,cb5) & reserved(t0,6,cb4))) & (doublePos(t0,6,4) -> (reserved(t0,4,cb4) & reserved(t0,4,cb3))) & (doublePos(t0,4,3) -> (reserved(t0,3,cb3) & reserved(t0,3,cb2))) & (doublePos(t0,3,1) -> (reserved(t0,1,cb2) & reserved(t0,1,cb1))) & (doublePos(t1,0,2) -> (reserved(t1,2,cb1) & reserved(t1,2,cb2))) & (doublePos(t1,2,3) -> (reserved(t1,3,cb2) & reserved(t1,3,cb3))) & (doublePos(t1,3,5) -> (reserved(t1,5,cb3) & reserved(t1,5,cb4))) & (doublePos(t1,5,6) -> (reserved(t1,6,cb4) & reserved(t1,6,cb5))) & (doublePos(t1,6,8) -> (reserved(t1,8,cb5) & reserved(t1,8,cb6))) & (doublePos(t1,8,9) -> (reserved(t1,9,cb6) & reserved(t1,9,cb7))) & (doublePos(t1,9,11) -> (reserved(t1,11,cb7) & reserved(t1,11,cb8))) & (doublePos(t1,11,12) -> (reserved(t1,12,cb8) & reserved(t1,12,cb9))) & (doublePos(t1,12,14) -> (reserved(t1,14,cb9) & reserved(t1,14,cb10))) & (doublePos(t1,14,15) -> (reserved(t1,15,cb10) & reserved(t1,15,cb13))) & (doublePos(t1,15,17) -> (reserved(t1,17,cb13) & reserved(t1,17,cb11))) & (doublePos(t1,17,18) -> (reserved(t1,18,cb11) & reserved(t1,18,cb12))))

//CONSISTENCY
//Reservation consistency: The reservations saved in the state space of a Train are also saved in the state spaces of the involved CBs
AG((reserved(t0,18,cb11) -> reservedBy(cb11,18,t0)) & (reserved(t0,18,cb13) -> reservedBy(cb13,18,t0)) & (reserved(t0,16,cb13) -> reservedBy(cb13,16,t0)) & (reserved(t0,16,cb10) -> reservedBy(cb10,16,t0)) & (reserved(t0,15,cb10) -> reservedBy(cb10,15,t0)) & (reserved(t0,15,cb9) -> reservedBy(cb9,15,t0)) & (reserved(t0,13,cb9) -> reservedBy(cb9,13,t0)) & (reserved(t0,13,cb8) -> reservedBy(cb8,13,t0)) & (reserved(t0,12,cb8) -> reservedBy(cb8,12,t0)) & (reserved(t0,12,cb7) -> reservedBy(cb7,12,t0)) & (reserved(t0,10,cb7) -> reservedBy(cb7,10,t0)) & (reserved(t0,10,cb6) -> reservedBy(cb6,10,t0)) & (reserved(t0,9,cb6) -> reservedBy(cb6,9,t0)) & (reserved(t0,9,cb5) -> reservedBy(cb5,9,t0)) & (reserved(t0,7,cb5) -> reservedBy(cb5,7,t0)) & (reserved(t0,7,cb4) -> reservedBy(cb4,7,t0)) & (reserved(t0,6,cb4) -> reservedBy(cb4,6,t0)) & (reserved(t0,6,cb3) -> reservedBy(cb3,6,t0)) & (reserved(t0,4,cb3) -> reservedBy(cb3,4,t0)) & (reserved(t0,4,cb2) -> reservedBy(cb2,4,t0)) & (reserved(t0,3,cb2) -> reservedBy(cb2,3,t0)) & (reserved(t0,3,cb1) -> reservedBy(cb1,3,t0)) & (reserved(t1,0,cb1) -> reservedBy(cb1,0,t1)) & (reserved(t1,0,cb2) -> reservedBy(cb2,0,t1)) & (reserved(t1,2,cb2) -> reservedBy(cb2,2,t1)) & (reserved(t1,2,cb3) -> reservedBy(cb3,2,t1)) & (reserved(t1,3,cb3) -> reservedBy(cb3,3,t1)) & (reserved(t1,3,cb4) -> reservedBy(cb4,3,t1)) & (reserved(t1,5,cb4) -> reservedBy(cb4,5,t1)) & (reserved(t1,5,cb5) -> reservedBy(cb5,5,t1)) & (reserved(t1,6,cb5) -> reservedBy(cb5,6,t1)) & (reserved(t1,6,cb6) -> reservedBy(cb6,6,t1)) & (reserved(t1,8,cb6) -> reservedBy(cb6,8,t1)) & (reserved(t1,8,cb7) -> reservedBy(cb7,8,t1)) & (reserved(t1,9,cb7) -> reservedBy(cb7,9,t1)) & (reserved(t1,9,cb8) -> reservedBy(cb8,9,t1)) & (reserved(t1,11,cb8) -> reservedBy(cb8,11,t1)) & (reserved(t1,11,cb9) -> reservedBy(cb9,11,t1)) & (reserved(t1,12,cb9) -> reservedBy(cb9,12,t1)) & (reserved(t1,12,cb10) -> reservedBy(cb10,12,t1)) & (reserved(t1,14,cb10) -> reservedBy(cb10,14,t1)) & (reserved(t1,14,cb13) -> reservedBy(cb13,14,t1)) & (reserved(t1,15,cb13) -> reservedBy(cb13,15,t1)) & (reserved(t1,15,cb11) -> reservedBy(cb11,15,t1)) & (reserved(t1,17,cb11) -> reservedBy(cb11,17,t1)) & (reserved(t1,17,cb12) -> reservedBy(cb12,17,t1)))
//Lock consistency: The locks saved in the state space of a Train are also saved in the state spaces of the involved CBs
AG((locked(t0,cb12) -> lockedBy(cb12,t0)) & (locked(t0,cb11) -> lockedBy(cb11,t0)) & (locked(t0,cb13) -> lockedBy(cb13,t0)) & (locked(t0,cb10) -> lockedBy(cb10,t0)) & (locked(t0,cb9) -> lockedBy(cb9,t0)) & (locked(t0,cb8) -> lockedBy(cb8,t0)) & (locked(t0,cb7) -> lockedBy(cb7,t0)) & (locked(t0,cb6) -> lockedBy(cb6,t0)) & (locked(t0,cb5) -> lockedBy(cb5,t0)) & (locked(t0,cb4) -> lockedBy(cb4,t0)) & (locked(t0,cb3) -> lockedBy(cb3,t0)) & (locked(t0,cb2) -> lockedBy(cb2,t0)) & (locked(t0,cb1) -> lockedBy(cb1,t0)) & (locked(t1,cb0) -> lockedBy(cb0,t1)) & (locked(t1,cb1) -> lockedBy(cb1,t1)) & (locked(t1,cb2) -> lockedBy(cb2,t1)) & (locked(t1,cb3) -> lockedBy(cb3,t1)) & (locked(t1,cb4) -> lockedBy(cb4,t1)) & (locked(t1,cb5) -> lockedBy(cb5,t1)) & (locked(t1,cb6) -> lockedBy(cb6,t1)) & (locked(t1,cb7) -> lockedBy(cb7,t1)) & (locked(t1,cb8) -> lockedBy(cb8,t1)) & (locked(t1,cb9) -> lockedBy(cb9,t1)) & (locked(t1,cb10) -> lockedBy(cb10,t1)) & (locked(t1,cb13) -> lockedBy(cb13,t1)) & (locked(t1,cb11) -> lockedBy(cb11,t1)) & (locked(t1,cb12) -> lockedBy(cb12,t1)))
//Point consistency: A CB's connected information is consistent with its Point's position
AG(((connects(cb1,0,2) & ~inSwitching(cb1)) -> inPlus(p0)) & ((connects(cb1,0,1) & ~inSwitching(cb1)) -> ~inPlus(p0)) & ((connects(cb2,3,2) & ~inSwitching(cb2)) -> inPlus(p1)) & ((connects(cb2,3,1) & ~inSwitching(cb2)) -> ~inPlus(p1)) & ((connects(cb3,3,5) & ~inSwitching(cb3)) -> inPlus(p2)) & ((connects(cb3,3,4) & ~inSwitching(cb3)) -> ~inPlus(p2)) & ((connects(cb4,6,5) & ~inSwitching(cb4)) -> inPlus(p3)) & ((connects(cb4,6,4) & ~inSwitching(cb4)) -> ~inPlus(p3)) & ((connects(cb5,6,8) & ~inSwitching(cb5)) -> inPlus(p4)) & ((connects(cb5,6,7) & ~inSwitching(cb5)) -> ~inPlus(p4)) & ((connects(cb6,9,8) & ~inSwitching(cb6)) -> inPlus(p5)) & ((connects(cb6,9,7) & ~inSwitching(cb6)) -> ~inPlus(p5)) & ((connects(cb7,9,11) & ~inSwitching(cb7)) -> inPlus(p6)) & ((connects(cb7,9,10) & ~inSwitching(cb7)) -> ~inPlus(p6)) & ((connects(cb8,12,11) & ~inSwitching(cb8)) -> inPlus(p7)) & ((connects(cb8,12,10) & ~inSwitching(cb8)) -> ~inPlus(p7)) & ((connects(cb9,12,14) & ~inSwitching(cb9)) -> inPlus(p8)) & ((connects(cb9,12,13) & ~inSwitching(cb9)) -> ~inPlus(p8)) & ((connects(cb10,15,14) & ~inSwitching(cb10)) -> inPlus(p9)) & ((connects(cb10,15,13) & ~inSwitching(cb10)) -> ~inPlus(p9)) & ((connects(cb11,18,17) & ~inSwitching(cb11)) -> inPlus(p10)) & ((connects(cb11,18,16) & ~inSwitching(cb11)) -> ~inPlus(p10)) & ((connects(cb13,15,17) & ~inSwitching(cb13)) -> inPlus(p11)) & ((connects(cb13,15,16) & ~inSwitching(cb13)) -> ~inPlus(p11)))
//Position consistency: The train position saved in a TCC is consistent with the train's actual position
AG((doublePos(t0,18,16) -> connects(cb11,18,16)) & (doublePos(t0,16,15) -> connects(cb13,16,15)) & (doublePos(t0,15,13) -> connects(cb10,15,13)) & (doublePos(t0,13,12) -> connects(cb9,13,12)) & (doublePos(t0,12,10) -> connects(cb8,12,10)) & (doublePos(t0,10,9) -> connects(cb7,10,9)) & (doublePos(t0,9,7) -> connects(cb6,9,7)) & (doublePos(t0,7,6) -> connects(cb5,7,6)) & (doublePos(t0,6,4) -> connects(cb4,6,4)) & (doublePos(t0,4,3) -> connects(cb3,4,3)) & (doublePos(t0,3,1) -> connects(cb2,3,1)) & (doublePos(t1,0,2) -> connects(cb1,0,2)) & (doublePos(t1,2,3) -> connects(cb2,2,3)) & (doublePos(t1,3,5) -> connects(cb3,3,5)) & (doublePos(t1,5,6) -> connects(cb4,5,6)) & (doublePos(t1,6,8) -> connects(cb5,6,8)) & (doublePos(t1,8,9) -> connects(cb6,8,9)) & (doublePos(t1,9,11) -> connects(cb7,9,11)) & (doublePos(t1,11,12) -> connects(cb8,11,12)) & (doublePos(t1,12,14) -> connects(cb9,12,14)) & (doublePos(t1,14,15) -> connects(cb10,14,15)) & (doublePos(t1,15,17) -> connects(cb13,15,17)) & (doublePos(t1,17,18) -> connects(cb11,17,18)))
//LIVENESS
EF All_Trains_Arrive

