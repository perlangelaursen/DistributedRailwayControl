// NÃ¦rumbanen 3 trains
const int NCB = 18;
const int NSEG = 19;
const int NTRAIN = 3;
const int NPOINT = 6;
const int NROUTELENGTH = 15;

//TYPES
typedef int[0, NTRAIN-1] t_id;
typedef int[0, NCB-1]  cB_id;
typedef int[0, NPOINT-1] p_id;
typedef int[0, NSEG-1] seg_id;
typedef int[-1, NSEG-1] segV_id;
typedef int[-1, NPOINT-1] pV_id;
typedef int[-1, NCB-1] cBV_id;
typedef int[-1, NTRAIN-1] tV_id;
typedef struct {
    cB_id cb;
    seg_id seg;
} reservation;

//EXAMPLE
const int[1,NCB] lockLimit = 2;
const int[1,NSEG] resLimit = 2;


const cBV_id boxRoutes[NTRAIN][NROUTELENGTH+1] = {{0,2,3,4,5,6,7, 8, 9, 10, 11, 12,13, 14, 15, 17}, {10, 9, 8, 7, 6, 5, 4, 3, 2, 0, -1, -1, -1, -1, -1, -1}, {17, 15, 14, 13, 12, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, -1}};
const segV_id segRoutes[NTRAIN][NROUTELENGTH]= {{0,2,3,4,6,7,8,9,11,12,13,14,15,16,18}, {10, 9, 8, 7, 5, 4, 3, 2, 0, -1, -1, -1, -1,-1, -1}, {18, 16, 15, 14, 13, 12, 10, -1, -1,-1,-1,-1,-1,-1,-1}};
const segV_id cBs[NCB][3]= {{0,-1,-1}, {1, -1, -1}, {2, 0, 1}, {2, 3, -1}, {3, 4, -1}, {4, 5, 6}, {7, 5, 6}, {7,8,-1}, {8,9,-1}, {9,11,10}, {12,11,10}, {12,13,-1}, {13,14,-1},{14,15,-1},{15,16,-1},{16,18,17},{17,-1,-1}, {18,-1,-1}};
const pV_id points[NCB] = { -1, -1, 0, -1, -1, 1, 2, -1, -1, 3, 4, -1,-1,-1,-1,5,-1,-1};
const reservation initialRes[NTRAIN] = {{2, 0}, {9, 10}, {15, 18}};
bool pointInPlus[NPOINT] = {true, true, true, true, true, true};
